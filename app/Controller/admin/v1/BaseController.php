<?php
declare(strict_types=1);

/**
 * 基类
 */
namespace App\Controller\admin\v1;

use App\Controller\AbstractController;
use App\Middleware\BackendAuthMiddleware;
use App\Service\BaseService;
use Hyperf\Di\Annotation\Inject;
use Hyperf\HttpServer\Contract\RequestInterface;

class BaseController extends AbstractController
{
    /**
     * @Inject()
     * @var BaseService
     */
    public $service;

    /**
     * @param RequestInterface $request
     * @return \Hyperf\Contract\PaginatorInterface
     */
    public function index(RequestInterface $request)
    {
        return $this->service->index($request);
    }

    /**
     * @param RequestInterface $request
     * @return int
     */
    public function store(RequestInterface $request)
    {
        return $this->service->store($request);
    }

    /**
     * @param RequestInterface $request
     * @return int
     */
    public function update(RequestInterface $request)
    {
        return $this->service->update($request);
    }

    /**
     * @param RequestInterface $request
     * @return int
     */
    public function delete(RequestInterface $request)
    {
        return $this->service->delete($request);
    }

    /**
     * @param RequestInterface $request
     * @return \Hyperf\Database\Model\Model|\Hyperf\Database\Query\Builder|object|null
     */
    public function show(RequestInterface $request)
    {
        return $this->service->show($request);
    }

    /**
     * 获取token值
     * @return string
     */
    public function getAuthToken(): string
    {
        return BackendAuthMiddleware::$authToken;
    }

    /**
     * 获取解析后的token数据
     * @return array
     */
    public function getTokenInfo(): array
    {
        return BackendAuthMiddleware::$tokenInfo;
    }

    /**
     * 创建token
     * @param $info
     * @return string
     */
    public function createAuthToken($info): string
    {
        return BackendAuthMiddleware::createAuthToken($info); // TODO: Change the autogenerated stub
    }

    /**
     * 获取用户id
     * @return mixed
     */
    public function getUserId(): int
    {
        $info = $this->getTokenInfo();
        return $info['id'];
    }

    /**
     * @return array
     */
    public function getJwtConfig(): array
    {
        return BackendAuthMiddleware::getJwtConfig();
    }
}