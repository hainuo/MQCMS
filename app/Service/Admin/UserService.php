<?php
declare(strict_types=1);

namespace App\Service\Admin;


use App\Constants\ErrorCode;
use App\Exception\BusinessException;
use App\Service\BaseService;
use App\Utils\Common;
use Hyperf\HttpServer\Contract\RequestInterface;

class UserService extends BaseService
{
    public $table = 'user';

    /**
     * @param RequestInterface $request
     * @return \Hyperf\Contract\PaginatorInterface
     */
    public function index(RequestInterface $request)
    {
        $data = parent::index($request); // TODO: Change the autogenerated stub
        foreach ($data['data'] as $key => &$value) {
            $value['created_at'] = date('Y-m-d H:i:s', $value['created_at']);
            $value['updated_at'] = date('Y-m-d H:i:s', $value['updated_at']);
        }
        return $data;
    }

    /**
     * @param RequestInterface $request
     * @return int
     * @throws \Exception
     */
    public function store(RequestInterface $request)
    {
        $userName = $request->input('user_name');
        $realName = $request->input('real_name');
        $phone = $request->input('phone');
        $status = $request->has('status') ? $request->input('status') : 1;

        $this->select = ['id'];
        $this->condition = [['user_name', '=', $userName]];
        $userInfo = parent::show($request);
        if ($userInfo) {
            throw new BusinessException(ErrorCode::BAD_REQUEST, '用户名已经存在');
        }

        $ip = $request->getHeader('Host')[0];
        $salt = Common::generateSalt();
        $data = [
            'user_no' => Common::generateSnowId(),
            'user_name' => $userName,
            'real_name' => $realName,
            'nick_name' => $userName . generateRandomString(6),
            'phone' => $phone,
            'avatar' => '',
            'password' => Common::generatePasswordHash($phone, $salt),
            'salt' => $salt,
            'status' => $status,
            'register_time' => time(),
            'register_ip' => $ip,
            'login_time' => time(),
            'login_ip' => $ip,
            'created_at' => time(),
            'updated_at' => time(),
        ];
        $this->data = $data;
        return parent::store($request);
    }

    /**
     * @param RequestInterface $request
     * @return int
     */
    public function update(RequestInterface $request)
    {
        $id = $request->input('id');
        $userName = $request->input('user_name');
        $realName = $request->input('real_name');
        $phone = $request->input('phone');
        $status = $request->has('status') ? $request->input('status') : 1;

        $this->condition = ['id' => $id];
        $this->data = [
            'user_name' => $userName,
            'real_name' => $realName,
            'nick_name' => $userName . generateRandomString(6),
            'phone' => $phone,
            'status' => $status,
            'updated_at' => time(),
        ];
        return parent::update($request); // TODO: Change the autogenerated stub
    }
}